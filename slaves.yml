---
- hosts: slaves
  become: yes
  remote_user: ubuntu
  vars:
    pg_user: jenkins
    jenkins_domain: jenkins.krusche.infra
    api_jenkins_domain: api-jenkins.krusche.infra
    location_api_path: /opt/artifacts

  tasks:
  - shell: uname -r
    ignore_errors: yes
    register: uname_result

  - name: Adding Python repo
    apt_repository:
      repo: "ppa:fkrull/deadsnakes-python2.7"
      state: present
    tags: [python]

  - name: Installing Linux Image Extra modules and packages
    apt: name={{ item }} state=latest update_cache=yes
    with_items:
      - "linux-image-extra-{{ uname_result.stdout }}"
      - "linux-image-extra-virtual"
      - "curl"
      - "wget"
      - "apt-transport-https"
      - "ca-certificates"
      - "software-properties-common"
      - "nano"
      - "libgtk2.0-0"
      - "libnss3"
      - "libnss3-dev"
      - "libxi6"
      - "libgconf-2-4"
      - "unzip"
      - "python2.7"
      - "git"
      - "xvfb"
    tags: [basic, modules, packages]

  - name: Adding Oracle Java 8 repo
    apt_repository:
      repo: 'ppa:webupd8team/java'

  - shell: echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections
    tags: [java, licence]
  - shell: echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections
    tags: [java, licence]

  - name: Insatlling Oracle Java 8 and X server
    apt: name={{ item }} state=latest force=yes
    with_items:
      - "oracle-java8-installer"
      - "oracle-java8-set-default"
      - "xvfb"
      - "xserver-xephyr"
    tags: [java, xserver]

  - name: Adding Jenkins user
    user: name=jenkins state=present home=/opt/home/jenkins
    tags: jenkins_user

  - name: Insert Jenkins user to sudoers file
    lineinfile: dest=/etc/sudoers line="Defaults:jenkins !requiretty"
    tags: sudoers

  - name: Insert Jenkins user to sudoers file
    lineinfile: dest=/etc/sudoers  line="jenkins ALL=NOPASSWD:/usr/bin/Xvfb"
    tags: sudoers

  - name: Adding Postgres key
    apt_key:
      url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
      state: present
    tags: [postgres, postgres_key]

  - name: Adding Postgres repo
    apt_repository:
      repo: deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main
      state: present
    tags: [postgres, postgres_repo]

  - name: Installing Postgres software
    apt: name={{ item }} state=present
    with_items:
      - "postgresql-common"
      - "postgresql-9.4"
      - "postgresql-contrib-9.4"
    tags: [postgres]

  - name: Starting services
    service: name={{ item.service }} state={{ item.state }}
    with_items:
      - { service: "postgresql", state: "started"}
    tags: services

  - name: Creating directory
    file: name={{ item }} state=directory
    with_items:
      - /opt/pg
    tags: [postgres, postgres_user, postgres_directory]

  - name: Copying script for creating postgres user
    template: src=./templates/pg_user.sh.j2 dest=/opt/pg/pg_user.sh mode=0776
    tags: [postgres, postgres_user]

  - name: Running script for creating postgres user
    shell: /opt/pg/pg_user.sh
    tags: [postgres, postgres_user]