---
- hosts: slaves_without_pg
  become: yes
  remote_user: ubuntu
  vars:
    location_api_path: /opt/artifacts
    home_dir: /opt/home
    jenkins_dir: /opt/home/jenkins
    docker_dir: /opt/home/docker
    block_device: /dev/xvdb

  tasks:
  - shell: uname -r
    ignore_errors: yes
    register: uname_result

  - shell: lsb_release -cs
    ignore_errors: yes
    register: lsb_result

  - name: Creating Filesystem
    filesystem:
      fstype: ext4
      dev:  "{{ block_device }}"
    tags: [filesystem]

  - name: Adding dev to fstab
    mount:
      path: "{{ home_dir }}"
      src: "{{ block_device }}"
      fstype: ext4
      state: present
    tags: [fstab, mount]

  - name: Creating homes directory
    file: path=/opt/home state=directory

  - name: Mounting device
    shell: mount -a

  - name: Adding Python repo
    apt_repository:
      repo: "ppa:fkrull/deadsnakes-python2.7"
      state: present
    tags: [python]

  - name: Installing Linux Image Extra modules and packages
    apt: name={{ item }} state=latest update_cache=yes
    with_items:
      - "linux-image-extra-{{ uname_result.stdout }}"
      - "linux-image-extra-virtual"
      - "curl"
      - "wget"
      - "apt-transport-https"
      - "ca-certificates"
      - "software-properties-common"
      - "nano"
      - "libgtk2.0-0"
      - "libnss3"
      - "libnss3-dev"
      - "libxi6"
      - "libgconf-2-4"
      - "unzip"
      - "python2.7"
      - "git"
      - "xvfb"
    tags: [basic, modules, packages]

  - name: Adding Oracle Java 8 repo
    apt_repository:
      repo: 'ppa:webupd8team/java'

  - shell: echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections
    tags: [java, licence]
  - shell: echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections
    tags: [java, licence]

  - name: Insatlling Oracle Java 8 and X server
    apt: name={{ item }} state=latest force=yes
    with_items:
      - "oracle-java8-installer"
      - "oracle-java8-set-default"
    tags: [java, xserver]

  - name: Adding Jenkins user
    user: name=jenkins state=present home="{{ jenkins_dir }}"
    tags: jenkins_user

  - name: Insert Jenkins user to sudoers file
    lineinfile: dest=/etc/sudoers line="Defaults:jenkins !requiretty"
    tags: sudoers

  - name: Insert Jenkins user to sudoers file
    lineinfile: dest=/etc/sudoers  line="jenkins ALL=NOPASSWD:/usr/bin/Xvfb"
    tags: sudoers

  - name: Set authorized key, removing all the authorized key already set
    authorized_key:
      user: jenkins
      key: '{{ item }}'
      state: present
      path: /opt/home/jenkins/.ssh/authorized_keys
      exclusive: True
    with_file:
      - public_keys/jenkins.pub


  - name: Creating homes directory
    file: path={{ docker_dir }} state=directory

  - name: Creating Symlink for docker home
    file:
      src: "{{ docker_dir }}"
      dest: /var/lib/docker
      owner: root
      group: root
      state: link
    tags: [symlink]

  - name: Adding Docker GPG key
    apt_key: 
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
    tags: [docker, key]

  - name: Adding Docker repository
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ lsb_result.stdout }} stable
      state: present
    tags: [docker, repository]

  - name: Installing Docker software
    apt:  name=docker-ce state=latest update_cache=yes
    tags: [docker, docker_software]

  - name: Starting services
    service: name={{ item.service }} state={{ item.state }}
    with_items:
      - { service: "docker", state: "started" }
    tags: [docker]

  - name: Downloading and unarchiving Chrome Driver
    unarchive:
      src: https://chromedriver.storage.googleapis.com/2.27/chromedriver_linux64.zip
      dest: /usr/local/bin
      remote_src: True
    tags: [chromedriver, chromedriver_download]

  - name: Changing perm of "chromedriver", adding "+x"
    file: dest=/usr/local/bin/chromedriver mode=a+x
    tags: [chromedriver, chromedriver_chmod]



